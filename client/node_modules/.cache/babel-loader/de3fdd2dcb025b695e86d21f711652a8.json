{"ast":null,"code":"var _jsxFileName = \"/Users/luanakimley/nodejs-projects/ecommerce-web-app/client/src/components/ShoppingCart/AddToCart.jsx\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { SERVER_HOST, ACCESS_LEVEL_GUEST } from \"../../config/global_constants\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddToCart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirectToHome: false,\n      navTo: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const {\n      state\n    } = this.props.location;\n    this.setState({\n      navTo: state.navTo\n    });\n    const cartObject = {\n      productId: this.props.match.params.id,\n      userId: localStorage._id,\n      quantity: 1,\n      productPrice: this.props.match.params.price\n    };\n\n    if (localStorage.accessLevel > parseInt(ACCESS_LEVEL_GUEST)) {\n      axios.get(`${SERVER_HOST}/cart/${this.props.match.params.id}/${localStorage._id}`).then(res => {\n        if (res.data) {\n          if (this.props.match.params.stock <= res.data.quantity) {\n            Swal.fire({\n              title: \"Product not added\",\n              text: \"Not enough stock\",\n              icon: \"error\",\n              showConfirmButton: true,\n              confirmButtonColor: \"#123c69\"\n            }).then(this.setState({\n              redirectToHome: true\n            }));\n          } else {\n            axios.put(`${SERVER_HOST}/cart/increaseQuantity/${res.data._id}/${this.props.match.params.id}`);\n            Swal.fire({\n              title: `Product added to shopping cart`,\n              text: \"The product has been added.\",\n              icon: \"success\",\n              showConfirmButton: false,\n              timer: 1500\n            });\n            this.setState({\n              redirectToHome: true\n            });\n          }\n        } else {\n          axios.post(`${SERVER_HOST}/cart/${this.props.match.params.id}`, cartObject);\n          Swal.fire({\n            title: `Product added to shopping cart`,\n            text: \"The product has been added.\",\n            icon: \"success\",\n            showConfirmButton: false,\n            timer: 1500\n          });\n          this.setState({\n            redirectToHome: true\n          });\n        }\n      });\n    } else {\n      if (localStorage.cart === \"null\") {\n        Swal.fire({\n          title: `Product added to shopping cart`,\n          text: \"The product has been added.\",\n          icon: \"success\",\n          showConfirmButton: false,\n          timer: 1500\n        }).then(res => {\n          this.setState({\n            redirectToHome: true\n          });\n          window.location.reload(false);\n        });\n        const cartArray = [];\n        cartArray.push(cartObject);\n        localStorage.cart = JSON.stringify(cartArray);\n      } else {\n        const curCart = JSON.parse(localStorage.cart);\n        let quantity;\n        curCart.forEach(item => {\n          if (item.productId === cartObject.productId) {\n            quantity = item.quantity;\n          }\n        });\n\n        if (this.props.match.params.stock <= quantity) {\n          Swal.fire({\n            title: \"Product not added\",\n            text: \"Not enough stock\",\n            icon: \"error\",\n            showConfirmButton: true,\n            confirmButtonColor: \"#123c69\"\n          }).then(this.setState({\n            redirectToHome: true\n          }));\n        } else {\n          let exist = false;\n          curCart.forEach(item => {\n            if (item.productId === cartObject.productId) {\n              item.quantity++;\n              exist = true;\n            }\n          });\n\n          if (!exist) {\n            curCart.push(cartObject);\n          }\n\n          localStorage.cart = JSON.stringify(curCart);\n          Swal.fire({\n            title: `Product added to shopping cart`,\n            text: \"The product has been added.\",\n            icon: \"success\",\n            showConfirmButton: false,\n            timer: 1500\n          }).then(res => {\n            this.setState({\n              redirectToHome: true\n            });\n            window.location.reload(false);\n          });\n        }\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.redirectToHome ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: this.state.navTo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 38\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(AddToCart);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/luanakimley/nodejs-projects/ecommerce-web-app/client/src/components/ShoppingCart/AddToCart.jsx"],"names":["axios","React","Redirect","withRouter","SERVER_HOST","ACCESS_LEVEL_GUEST","Swal","AddToCart","Component","constructor","props","state","redirectToHome","navTo","componentDidMount","location","setState","cartObject","productId","match","params","id","userId","localStorage","_id","quantity","productPrice","price","accessLevel","parseInt","get","then","res","data","stock","fire","title","text","icon","showConfirmButton","confirmButtonColor","put","timer","post","cart","window","reload","cartArray","push","JSON","stringify","curCart","parse","forEach","item","exist","render"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { SERVER_HOST, ACCESS_LEVEL_GUEST } from \"../../config/global_constants\";\nimport Swal from \"sweetalert2\";\n\nclass AddToCart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirectToHome: false,\n      navTo: \"\",\n    };\n  }\n\n  componentDidMount() {\n    const { state } = this.props.location;\n    this.setState({ navTo: state.navTo });\n\n    const cartObject = {\n      productId: this.props.match.params.id,\n      userId: localStorage._id,\n      quantity: 1,\n      productPrice: this.props.match.params.price,\n    };\n\n    if (localStorage.accessLevel > parseInt(ACCESS_LEVEL_GUEST)) {\n      axios\n        .get(\n          `${SERVER_HOST}/cart/${this.props.match.params.id}/${localStorage._id}`\n        )\n        .then((res) => {\n          if (res.data) {\n            if (this.props.match.params.stock <= res.data.quantity) {\n              Swal.fire({\n                title: \"Product not added\",\n                text: \"Not enough stock\",\n                icon: \"error\",\n                showConfirmButton: true,\n                confirmButtonColor: \"#123c69\",\n              }).then(this.setState({ redirectToHome: true }));\n            } else {\n              axios.put(\n                `${SERVER_HOST}/cart/increaseQuantity/${res.data._id}/${this.props.match.params.id}`\n              );\n              Swal.fire({\n                title: `Product added to shopping cart`,\n                text: \"The product has been added.\",\n                icon: \"success\",\n                showConfirmButton: false,\n                timer: 1500,\n              });\n              this.setState({ redirectToHome: true });\n            }\n          } else {\n            axios.post(\n              `${SERVER_HOST}/cart/${this.props.match.params.id}`,\n              cartObject\n            );\n            Swal.fire({\n              title: `Product added to shopping cart`,\n              text: \"The product has been added.\",\n              icon: \"success\",\n              showConfirmButton: false,\n              timer: 1500,\n            });\n            this.setState({ redirectToHome: true });\n          }\n        });\n    } else {\n      if (localStorage.cart === \"null\") {\n        Swal.fire({\n          title: `Product added to shopping cart`,\n          text: \"The product has been added.\",\n          icon: \"success\",\n          showConfirmButton: false,\n          timer: 1500,\n        }).then((res) => {\n          this.setState({ redirectToHome: true });\n          window.location.reload(false);\n        });\n        const cartArray = [];\n        cartArray.push(cartObject);\n        localStorage.cart = JSON.stringify(cartArray);\n      } else {\n        const curCart = JSON.parse(localStorage.cart);\n        let quantity;\n        curCart.forEach((item) => {\n          if (item.productId === cartObject.productId) {\n            quantity = item.quantity;\n          }\n        });\n        if (this.props.match.params.stock <= quantity) {\n          Swal.fire({\n            title: \"Product not added\",\n            text: \"Not enough stock\",\n            icon: \"error\",\n            showConfirmButton: true,\n            confirmButtonColor: \"#123c69\",\n          }).then(this.setState({ redirectToHome: true }));\n        } else {\n          let exist = false;\n          curCart.forEach((item) => {\n            if (item.productId === cartObject.productId) {\n              item.quantity++;\n              exist = true;\n            }\n          });\n          if (!exist) {\n            curCart.push(cartObject);\n          }\n\n          localStorage.cart = JSON.stringify(curCart);\n          Swal.fire({\n            title: `Product added to shopping cart`,\n            text: \"The product has been added.\",\n            icon: \"success\",\n            showConfirmButton: false,\n            timer: 1500,\n          }).then((res) => {\n            this.setState({ redirectToHome: true });\n            window.location.reload(false);\n          });\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.redirectToHome ? <Redirect to={this.state.navTo} /> : null}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(AddToCart);\n"]},"metadata":{},"sourceType":"module"}