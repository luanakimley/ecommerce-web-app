{"ast":null,"code":"var _jsxFileName = \"/Users/luanakimley/nodejs-projects/ecommerce-web-app/client/src/components/ShoppingCart/Checkout.jsx\";\nimport React from \"react\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../../config/global_constants\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Checkout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSuccess = paymentData => {\n      console.log(\"PayPal payment was successful:\", paymentData);\n      let url = `${SERVER_HOST}/orders`;\n      let orderDetails = new Object();\n      orderDetails.paymentId = paymentData.id;\n      orderDetails.amount = this.props.amount;\n      orderDetails.userId = localStorage._id;\n      orderDetails.products = [];\n      this.props.cartItems.map((item, index) => {\n        orderDetails.products[index] = {\n          productId: item.productId,\n          quantity: item.quantity\n        };\n      });\n      let today = new Date();\n      orderDetails.date = today;\n      console.log(orderDetails);\n      axios.post(url);\n      localStorage.cart = \"null\";\n      Swal.fire({\n        title: \"PayPal payment was successful\",\n        icon: \"success\",\n        showConfirmButton: true,\n        confirmButtonColor: \"#123c69\"\n      });\n    };\n\n    this.onError = errorData => {\n      console.log(\"PayPal error:\", errorData);\n      Swal.fire({\n        title: \"PayPal error\",\n        text: \"No items in shopping cart\",\n        icon: \"error\",\n        showConfirmButton: true,\n        confirmButtonColor: \"#123c69\"\n      });\n    };\n\n    this.onCancel = cancelData => {\n      // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n      console.log(\"Payment cancelled by user:\", cancelData);\n      Swal.fire({\n        title: \"Payment cancelled by user\",\n        icon: \"warning\",\n        showConfirmButton: false,\n        timer: 2000\n      });\n    };\n\n    this.state = {\n      redirectToHome: false\n    };\n  }\n\n  render() {\n    const client_id = SANDBOX_CLIENT_ID;\n    return /*#__PURE__*/_jsxDEV(PayPalButton, {\n      options: {\n        clientId: client_id,\n        currency: \"EUR\"\n      },\n      amount: this.props.amount,\n      onSuccess: this.onSuccess,\n      onError: this.onError,\n      onCancel: this.onCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/luanakimley/nodejs-projects/ecommerce-web-app/client/src/components/ShoppingCart/Checkout.jsx"],"names":["React","SANDBOX_CLIENT_ID","SERVER_HOST","PayPalButton","Swal","axios","Checkout","Component","constructor","props","onSuccess","paymentData","console","log","url","orderDetails","Object","paymentId","id","amount","userId","localStorage","_id","products","cartItems","map","item","index","productId","quantity","today","Date","date","post","cart","fire","title","icon","showConfirmButton","confirmButtonColor","onError","errorData","text","onCancel","cancelData","timer","state","redirectToHome","render","client_id","clientId","currency"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../../config/global_constants\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\n\nexport default class Checkout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirectToHome: false,\n    };\n  }\n  onSuccess = (paymentData) => {\n    console.log(\"PayPal payment was successful:\", paymentData);\n\n    let url = `${SERVER_HOST}/orders`;\n\n    let orderDetails = new Object();\n    orderDetails.paymentId = paymentData.id;\n    orderDetails.amount = this.props.amount;\n    orderDetails.userId = localStorage._id;\n    orderDetails.products = [];\n\n    this.props.cartItems.map((item, index) => {\n      orderDetails.products[index] = {\n        productId: item.productId,\n        quantity: item.quantity,\n      };\n    });\n\n    let today = new Date();\n    orderDetails.date = today;\n\n    console.log(orderDetails);\n\n    axios.post(url);\n\n    localStorage.cart = \"null\";\n\n    Swal.fire({\n      title: \"PayPal payment was successful\",\n      icon: \"success\",\n      showConfirmButton: true,\n      confirmButtonColor: \"#123c69\",\n    });\n  };\n\n  onError = (errorData) => {\n    console.log(\"PayPal error:\", errorData);\n    Swal.fire({\n      title: \"PayPal error\",\n      text: \"No items in shopping cart\",\n      icon: \"error\",\n      showConfirmButton: true,\n      confirmButtonColor: \"#123c69\",\n    });\n  };\n\n  onCancel = (cancelData) => {\n    // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n    console.log(\"Payment cancelled by user:\", cancelData);\n    Swal.fire({\n      title: \"Payment cancelled by user\",\n      icon: \"warning\",\n      showConfirmButton: false,\n      timer: 2000,\n    });\n  };\n\n  render() {\n    const client_id = SANDBOX_CLIENT_ID;\n\n    return (\n      <PayPalButton\n        options={{\n          clientId: client_id,\n          currency: \"EUR\",\n        }}\n        amount={this.props.amount}\n        onSuccess={this.onSuccess}\n        onError={this.onError}\n        onCancel={this.onCancel}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}