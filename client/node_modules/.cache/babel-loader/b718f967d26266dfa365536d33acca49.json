{"ast":null,"code":"var _jsxFileName = \"/Users/luanakimley/nodejs-projects/ecommerce-web-app/client/src/components/ShoppingCart/Checkout.jsx\";\nimport React from \"react\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../../config/global_constants\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Checkout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSuccess = paymentData => {\n      console.log(\"PayPal payment was successful:\", paymentData);\n      let url = `${SERVER_HOST}/orders/${paymentData.id}/${this.props.amount}?userId=${localStorage._id}`;\n      this.props.cartItems.forEach(item => {\n        for (let i = 0; i < item.quantity; i++) {\n          url += `&productId=${item.productId}`;\n        }\n      });\n      axios.post(url);\n      localStorage.cart = \"null\";\n      Swal.fire({\n        title: \"PayPal payment was successful\",\n        icon: \"success\",\n        showConfirmButton: false,\n        timer: 2000\n      });\n    };\n\n    this.onError = errorData => {\n      console.log(\"PayPal error:\", errorData);\n      Swal.fire({\n        title: \"PayPal error\",\n        icon: \"error\",\n        showConfirmButton: true,\n        confirmButtonColor: \"#123c69\"\n      });\n    };\n\n    this.onCancel = cancelData => {\n      // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n      console.log(\"Payment cancelled by user:\", cancelData);\n      Swal.fire({\n        title: \"Payment cancelled by user\",\n        icon: \"warning\",\n        showConfirmButton: false,\n        timer: 2000\n      });\n    };\n\n    this.state = {\n      redirectToHome: false\n    };\n  }\n\n  render() {\n    const client_id = SANDBOX_CLIENT_ID;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.redirectToHome ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/shop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(PayPalButton, {\n        options: {\n          clientId: client_id,\n          currency: \"EUR\"\n        },\n        amount: this.props.amount,\n        onSuccess: this.onSuccess,\n        onError: this.onError,\n        onCancel: this.onCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/luanakimley/nodejs-projects/ecommerce-web-app/client/src/components/ShoppingCart/Checkout.jsx"],"names":["React","SANDBOX_CLIENT_ID","SERVER_HOST","PayPalButton","Swal","axios","Redirect","Checkout","Component","constructor","props","onSuccess","paymentData","console","log","url","id","amount","localStorage","_id","cartItems","forEach","item","i","quantity","productId","post","cart","fire","title","icon","showConfirmButton","timer","onError","errorData","confirmButtonColor","onCancel","cancelData","state","redirectToHome","render","client_id","clientId","currency"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../../config/global_constants\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class Checkout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirectToHome: false,\n    };\n  }\n  onSuccess = (paymentData) => {\n    console.log(\"PayPal payment was successful:\", paymentData);\n\n    let url = `${SERVER_HOST}/orders/${paymentData.id}/${this.props.amount}?userId=${localStorage._id}`;\n\n    this.props.cartItems.forEach((item) => {\n      for (let i = 0; i < item.quantity; i++) {\n        url += `&productId=${item.productId}`;\n      }\n    });\n\n    axios.post(url, );\n\n    localStorage.cart = \"null\";\n\n    Swal.fire({\n      title: \"PayPal payment was successful\",\n      icon: \"success\",\n      showConfirmButton: false,\n      timer: 2000,\n    });\n  };\n\n  onError = (errorData) => {\n    console.log(\"PayPal error:\", errorData);\n    Swal.fire({\n      title: \"PayPal error\",\n      icon: \"error\",\n      showConfirmButton: true,\n      confirmButtonColor: \"#123c69\",\n    });\n  };\n\n  onCancel = (cancelData) => {\n    // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n    console.log(\"Payment cancelled by user:\", cancelData);\n    Swal.fire({\n      title: \"Payment cancelled by user\",\n      icon: \"warning\",\n      showConfirmButton: false,\n      timer: 2000,\n    });\n  };\n\n  render() {\n    const client_id = SANDBOX_CLIENT_ID;\n\n    return (\n      <div>\n        {this.state.redirectToHome ? <Redirect to=\"/shop\" /> : null}\n        <PayPalButton\n          options={{\n            clientId: client_id,\n            currency: \"EUR\",\n          }}\n          amount={this.props.amount}\n          onSuccess={this.onSuccess}\n          onError={this.onError}\n          onCancel={this.onCancel}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}