{"ast":null,"code":"var _jsxFileName = \"/Users/luanakimley/nodejs-projects/ecommerce-web-app/client/src/components/Account/Password.jsx\";\nimport React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useParams, Redirect, withRouter } from \"react-router-dom\";\nimport { SERVER_HOST } from \"../../config/global_constants\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Password extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      axios.defaults.withCredentials = true;\n      const passwordObject = {\n        password: this.state.newPassword\n      };\n      axios.put(`${SERVER_HOST}/users/${this.props.match.params.id}/${this.state.oldPassword}`, passwordObject, {\n        headers: {\n          authorization: localStorage.token\n        }\n      }).then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n            Swal.fire({\n              title: \"Password not changed\",\n              text: res.data.errorMessage,\n              icon: \"error\",\n              confirmButtonColor: \"#123c69\",\n              showConfirmButton: true\n            });\n          } else {\n            console.log(\"Password changed\");\n            Swal.fire({\n              title: \"Password changed\",\n              text: \"Password has been changed.\",\n              icon: \"success\",\n              showConfirmButton: false,\n              timer: 1500\n            });\n            this.setState({\n              redirectToHome: true\n            });\n          }\n        } else {\n          console.log(\"Password not changed\");\n          Swal.fire({\n            title: \"Password not changed\",\n            text: \"Make sure that password is valid.\",\n            icon: \"error\",\n            confirmButtonColor: \"#123c69\",\n            showConfirmButton: true\n          });\n        }\n      });\n    };\n\n    this.state = {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmNewPassword: \"\"\n    };\n  }\n\n  validatePassword() {\n    return /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{8,}$/.test(this.state.newPassword);\n  }\n\n  validateConfirmPassword() {\n    return this.state.confirmNewPassword === this.state.newPassword;\n  }\n\n  validate() {\n    return {\n      password: this.validatePassword(),\n      confirmPassword: this.validateConfirmPassword()\n    };\n  }\n\n  render() {\n    const formInputsState = this.validate();\n    const inputsAreAllValid = Object.keys(formInputsState).every(index => formInputsState[index]);\n    let passwordError = \"\";\n    let confirmPasswordError = \"\";\n\n    if (!this.validatePassword()) {\n      let errorData = [];\n\n      if (this.state.newPassword.length < 8) {\n        errorData.push({\n          id: 0,\n          message: \"Password must be at least 8 characters long.\"\n        });\n      }\n\n      if (!this.state.newPassword.match(/(?=.*[0-9])/)) {\n        errorData.push({\n          id: 1,\n          message: \"Password must contain at least one digit (0-9).\"\n        });\n      }\n\n      if (!this.state.newPassword.match(/[a-z]+/)) {\n        errorData.push({\n          id: 2,\n          message: \"Password must contain at least one lowercase character.\"\n        });\n      }\n\n      if (!this.state.newPassword.match(/[A-Z]+/)) {\n        errorData.push({\n          id: 3,\n          message: \"Password must contain at least one uppercase character.\"\n        });\n      }\n\n      if (!this.state.newPassword.match(/(?=.*[£!#€$%^&*])/)) {\n        errorData.push({\n          id: 4,\n          message: \"Password must contain at least one of the characters £!#€$%^&*\"\n        });\n      }\n\n      passwordError = /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"text-danger mt-2\",\n        children: errorData.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"error\",\n          children: e.message\n        }, e.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (!this.validateConfirmPassword()) {\n      confirmPasswordError = /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger mt-2\",\n        children: \"Passwords must match.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Form, {\n      children: [this.state.redirectToHome ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/shop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-floating mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Current password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"oldPassword\",\n          className: \"form-control\",\n          placeholder: \"Enter current password\",\n          onChange: this.handleChange,\n          value: this.state.oldPassword,\n          required: true,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-floating mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"newPassword\",\n          className: \"form-control\",\n          placeholder: \"Enter new password\",\n          onChange: this.handleChange,\n          value: this.state.newPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), passwordError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-floating mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmNewPassword\",\n          className: \"form-control\",\n          value: this.state.confirmNewPassword,\n          placeholder: \"Confirm new password\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), confirmPasswordError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary fw-bold mt-4\",\n          onClick: this.handleSubmit,\n          disabled: !inputsAreAllValid,\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Password);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/luanakimley/nodejs-projects/ecommerce-web-app/client/src/components/Account/Password.jsx"],"names":["React","Form","axios","useParams","Redirect","withRouter","SERVER_HOST","Swal","Password","Component","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","defaults","withCredentials","passwordObject","password","state","newPassword","put","match","params","id","oldPassword","headers","authorization","localStorage","token","then","res","data","errorMessage","console","log","fire","title","text","icon","confirmButtonColor","showConfirmButton","timer","redirectToHome","confirmNewPassword","validatePassword","test","validateConfirmPassword","validate","confirmPassword","render","formInputsState","inputsAreAllValid","Object","keys","every","index","passwordError","confirmPasswordError","errorData","length","push","message","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useParams, Redirect, withRouter } from \"react-router-dom\";\nimport { SERVER_HOST } from \"../../config/global_constants\";\nimport Swal from \"sweetalert2\";\n\n\nclass Password extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmNewPassword: \"\",\n    };\n  }\n\n  validatePassword() {\n    return /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{8,}$/.test(\n      this.state.newPassword\n    );\n  }\n\n  validateConfirmPassword() {\n    return this.state.confirmNewPassword === this.state.newPassword;\n  }\n\n  validate() {\n    return {\n      password: this.validatePassword(),\n      confirmPassword: this.validateConfirmPassword(),\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    axios.defaults.withCredentials = true;\n\n    const passwordObject = {\n      password: this.state.newPassword,\n    };\n\n    axios\n      .put(\n        `${SERVER_HOST}/users/${this.props.match.params.id}/${this.state.oldPassword}`,\n        passwordObject,\n        { headers: { authorization: localStorage.token } }\n      )\n      .then((res) => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n            Swal.fire({\n              title: \"Password not changed\",\n              text: res.data.errorMessage,\n              icon: \"error\",\n              confirmButtonColor: \"#123c69\",\n              showConfirmButton: true,\n            });\n          } else {\n            console.log(\"Password changed\");\n            Swal.fire({\n              title: \"Password changed\",\n              text: \"Password has been changed.\",\n              icon: \"success\",\n              showConfirmButton: false,\n              timer: 1500,\n            });\n            this.setState({ redirectToHome: true });\n          }\n        } else {\n          console.log(\"Password not changed\");\n          Swal.fire({\n            title: \"Password not changed\",\n            text: \"Make sure that password is valid.\",\n            icon: \"error\",\n            confirmButtonColor: \"#123c69\",\n            showConfirmButton: true,\n          });\n        }\n      });\n  };\n\n  render() {\n    const formInputsState = this.validate();\n    const inputsAreAllValid = Object.keys(formInputsState).every(\n      (index) => formInputsState[index]\n    );\n\n    let passwordError = \"\";\n    let confirmPasswordError = \"\";\n\n    if (!this.validatePassword()) {\n      let errorData = [];\n\n      if (this.state.newPassword.length < 8) {\n        errorData.push({\n          id: 0,\n          message: \"Password must be at least 8 characters long.\",\n        });\n      }\n      if (!this.state.newPassword.match(/(?=.*[0-9])/)) {\n        errorData.push({\n          id: 1,\n          message: \"Password must contain at least one digit (0-9).\",\n        });\n      }\n      if (!this.state.newPassword.match(/[a-z]+/)) {\n        errorData.push({\n          id: 2,\n          message: \"Password must contain at least one lowercase character.\",\n        });\n      }\n      if (!this.state.newPassword.match(/[A-Z]+/)) {\n        errorData.push({\n          id: 3,\n          message: \"Password must contain at least one uppercase character.\",\n        });\n      }\n      if (!this.state.newPassword.match(/(?=.*[£!#€$%^&*])/)) {\n        errorData.push({\n          id: 4,\n          message:\n            \"Password must contain at least one of the characters £!#€$%^&*\",\n        });\n      }\n\n      passwordError = (\n        <ul className=\"text-danger mt-2\">\n          {errorData.map((e) => (\n            <li key={e.id} className=\"error\">\n              {e.message}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n    if (!this.validateConfirmPassword()) {\n      confirmPasswordError = (\n        <p className=\"text-danger mt-2\">Passwords must match.</p>\n      );\n    }\n\n    return (\n      <Form>\n        {this.state.redirectToHome ? <Redirect to=\"/shop\" /> : null}\n        <div className=\"form-floating mb-3\">\n          <label>Current password</label>\n          <input\n            type=\"password\"\n            name=\"oldPassword\"\n            className=\"form-control\"\n            placeholder=\"Enter current password\"\n            onChange={this.handleChange}\n            value={this.state.oldPassword}\n            required\n            autoFocus\n          />\n        </div>\n\n        <div className=\"form-floating mb-3\">\n          <label>New password</label>\n          <input\n            type=\"password\"\n            name=\"newPassword\"\n            className=\"form-control\"\n            placeholder=\"Enter new password\"\n            onChange={this.handleChange}\n            value={this.state.newPassword}\n          />\n          {passwordError}\n        </div>\n\n        <div className=\"form-floating mb-3\">\n          <label>Confirm new password</label>\n          <input\n            type=\"password\"\n            name=\"confirmNewPassword\"\n            className=\"form-control\"\n            value={this.state.confirmNewPassword}\n            placeholder=\"Confirm new password\"\n            onChange={this.handleChange}\n          />\n          {confirmPasswordError}\n        </div>\n        <div className=\"d-grid mb-2\">\n          <button\n            className=\"btn btn-primary fw-bold mt-4\"\n            onClick={this.handleSubmit}\n            disabled={!inputsAreAllValid}\n          >\n            Change Password\n          </button>\n        </div>\n      </Form>\n    );\n  }\n}\n\nexport default withRouter(Password);\n"]},"metadata":{},"sourceType":"module"}