{"ast":null,"code":"var _jsxFileName = \"/Users/luanakimley/nodejs-projects/ecommerce-web-app/client/src/components/ShoppingCart/Checkout.jsx\";\nimport React from \"react\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../../config/global_constants\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Checkout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSuccess = paymentData => {\n      console.log(\"PayPal payment was successful:\", paymentData);\n      let url = `${SERVER_HOST}/orders`;\n      let orderDetails = new Object();\n      orderDetails.paymentId = paymentData.id;\n      orderDetails.amount = this.props.amount;\n      orderDetails.shippingCost = this.props.shippingCost;\n      orderDetails.userId = localStorage._id;\n      orderDetails.products = [];\n      this.props.cartItems.map((item, index) => {\n        orderDetails.products[index] = {\n          productId: item.productId,\n          quantity: item.quantity\n        };\n      });\n      let today = new Date();\n      orderDetails.date = today;\n      axios.post(url, orderDetails);\n      localStorage.cart = \"null\";\n      Swal.fire({\n        title: \"PayPal payment was successful\",\n        icon: \"success\",\n        showConfirmButton: true,\n        confirmButtonColor: \"#123c69\"\n      }).then(res => {\n        if (res.isConfirmed) {\n          window.location.reload(false);\n          this.setState({\n            redirectToHome: true\n          });\n        }\n      });\n    };\n\n    this.onError = errorData => {\n      console.log(\"PayPal error:\", errorData);\n      Swal.fire({\n        title: \"PayPal error\",\n        text: \"No items in shopping cart\",\n        icon: \"error\",\n        showConfirmButton: true,\n        confirmButtonColor: \"#123c69\"\n      }).then(res => {\n        if (res.isConfirmed) {}\n      });\n    };\n\n    this.onCancel = cancelData => {\n      // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n      console.log(\"Payment cancelled by user:\", cancelData);\n      Swal.fire({\n        title: \"Payment cancelled by user\",\n        icon: \"warning\",\n        showConfirmButton: false,\n        timer: 2000\n      });\n    };\n\n    this.state = {\n      redirectToHome: false\n    };\n  }\n\n  render() {\n    const client_id = SANDBOX_CLIENT_ID;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.redirectToHome ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(PayPalButton, {\n        options: {\n          clientId: client_id,\n          currency: \"EUR\"\n        },\n        amount: this.props.amount,\n        onSuccess: this.onSuccess,\n        onError: this.onError,\n        onCancel: this.onCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/luanakimley/nodejs-projects/ecommerce-web-app/client/src/components/ShoppingCart/Checkout.jsx"],"names":["React","SANDBOX_CLIENT_ID","SERVER_HOST","PayPalButton","Swal","axios","Redirect","Checkout","Component","constructor","props","onSuccess","paymentData","console","log","url","orderDetails","Object","paymentId","id","amount","shippingCost","userId","localStorage","_id","products","cartItems","map","item","index","productId","quantity","today","Date","date","post","cart","fire","title","icon","showConfirmButton","confirmButtonColor","then","res","isConfirmed","window","location","reload","setState","redirectToHome","onError","errorData","text","onCancel","cancelData","timer","state","render","client_id","clientId","currency"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { SANDBOX_CLIENT_ID, SERVER_HOST } from \"../../config/global_constants\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class Checkout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirectToHome: false,\n    };\n  }\n  onSuccess = (paymentData) => {\n    console.log(\"PayPal payment was successful:\", paymentData);\n\n    let url = `${SERVER_HOST}/orders`;\n\n    let orderDetails = new Object();\n    orderDetails.paymentId = paymentData.id;\n    orderDetails.amount = this.props.amount;\n    orderDetails.shippingCost = this.props.shippingCost;\n    orderDetails.userId = localStorage._id;\n    orderDetails.products = [];\n\n    this.props.cartItems.map((item, index) => {\n      orderDetails.products[index] = {\n        productId: item.productId,\n        quantity: item.quantity,\n      };\n    });\n\n    let today = new Date();\n    orderDetails.date = today;\n\n    axios.post(url, orderDetails);\n\n    localStorage.cart = \"null\";\n\n    Swal.fire({\n      title: \"PayPal payment was successful\",\n      icon: \"success\",\n      showConfirmButton: true,\n      confirmButtonColor: \"#123c69\",\n    }).then((res) => {\n      if (res.isConfirmed) {\n        window.location.reload(false);\n        this.setState({ redirectToHome: true });\n      }\n    });\n  };\n\n  onError = (errorData) => {\n    console.log(\"PayPal error:\", errorData);\n    Swal.fire({\n      title: \"PayPal error\",\n      text: \"No items in shopping cart\",\n      icon: \"error\",\n      showConfirmButton: true,\n      confirmButtonColor: \"#123c69\",\n    }).then((res) => {\n      if (res.isConfirmed) {\n      }\n    });\n  };\n\n  onCancel = (cancelData) => {\n    // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n    console.log(\"Payment cancelled by user:\", cancelData);\n    Swal.fire({\n      title: \"Payment cancelled by user\",\n      icon: \"warning\",\n      showConfirmButton: false,\n      timer: 2000,\n    });\n  };\n\n  render() {\n    const client_id = SANDBOX_CLIENT_ID;\n\n    return (\n      <div>\n        {this.state.redirectToHome ? <Redirect to=\"/\" /> : null}\n        <PayPalButton\n          options={{\n            clientId: client_id,\n            currency: \"EUR\",\n          }}\n          amount={this.props.amount}\n          onSuccess={this.onSuccess}\n          onError={this.onError}\n          onCancel={this.onCancel}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}